{"version":3,"sources":["scripts/main.js"],"names":["list","detailLink","request","link","fetch","then","response","ok","headers","get","includes","json","Promise","reject","Error","arrayID","map","element","id","resolve","getFirstReceivedDetails","array","race","getAllSuccessfulDetails","all","getThreeFastestDetails","detail","el","createList","className","heading","document","body","insertAdjacentHTML","createLi","text","querySelector","handler","func","message","phoneDetail","i","catch","error"],"mappings":"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","file":"main.237b406b.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst list = 'https://mate-academy.github.io/'\n  + 'phone-catalogue-static/api/phones.json';\nconst detailLink = 'https://mate-academy.github.io/'\n  + 'phone-catalogue-static/api/phones/';\n\nconst request = (link) => {\n  return fetch(link)\n    .then(response => {\n      if (!response.ok\n        || !response.headers.get('content-type').includes('application/json')\n      ) {\n        return Promise.reject(new Error('Error'));\n      }\n\n      return response.json();\n    })\n    .then(response => {\n      const arrayID = response.map(element => {\n        return element.id;\n      });\n\n      return Promise.resolve(arrayID);\n    });\n};\n\nfunction getFirstReceivedDetails(array) {\n  return Promise.race(array.map(id => {\n    return fetch(detailLink + `${id}.json`)\n      .then(response => response.json())\n      .then(response => `ID: ${response.id}`);\n  }));\n}\n\nfunction getAllSuccessfulDetails(array) {\n  return Promise.all(array.map(id => {\n    return fetch(detailLink + `${id}.json`)\n      .then(response => response.json())\n      .then(response => `ID: ${response.id}`);\n  }));\n}\n\nfunction getThreeFastestDetails(array) {\n  const detail = array.map(id => {\n    return fetch(detailLink + `${id}.json`)\n      .then(response => response.json());\n  });\n\n  return Promise.all([Promise.race(detail),\n    Promise.race(detail), Promise.race(detail)])\n    .then(response => response.map(el => `ID: ${el.id}`));\n}\n\nfunction createList(className, heading) {\n  document.body.insertAdjacentHTML('afterbegin',\n    `<ul class=\"${className}\">\n        <h2>${heading}</h2>\n    </ul>`);\n}\n\nfunction createLi(className, text) {\n  document.body.querySelector(`.${className}`).insertAdjacentHTML(\n    'beforeend',\n    `<li>${text}</li>`\n  );\n}\n\nfunction handler(func, response, className, message) {\n  func(response)\n    .then(phoneDetail => {\n      createList(className, message);\n\n      for (const i of phoneDetail) {\n        createLi(className, i);\n      }\n    });\n}\n\nrequest(list)\n  .then(response => {\n    getFirstReceivedDetails(response)\n      .then(phoneDetail => {\n        createList('first-received', 'First successful');\n        createLi('first-received', phoneDetail);\n      });\n\n    handler(getAllSuccessfulDetails, response, 'all-successful',\n      'All successful');\n\n    handler(getThreeFastestDetails, response, 'first-three-successful',\n      'First three successful');\n  })\n  .catch(error => {\n    return error;\n  });\n"]}